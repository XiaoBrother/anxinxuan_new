package com.axinxuandroid.activity.view;

 

import com.axinxuandroid.activity.R;
import com.ncpzs.util.LogUtil;
  
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
 import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;

public class CommonTopView extends ViewGroup{
    private TextView title,subtitle;
    private ImageButton leftimg;
    private ImageButton rightimg;
    private String titlestr;
    private String subtitlestr;
    private Drawable leftbg;
    private Drawable rightbg;
    private View mainLay;
    private LinearLayout leftlay,rightlay;
	public CommonTopView(Context context) {
		super(context);
		initview(context);
 	}
	public CommonTopView(Context context,AttributeSet sets) {
		super(context,sets);
		 TypedArray tArray = context.obtainStyledAttributes(sets,
	                R.styleable.commontop);
		 titlestr = tArray.getString(R.styleable.commontop_title);
		 subtitlestr = tArray.getString(R.styleable.commontop_subtitle);
		 leftbg=tArray.getDrawable(R.styleable.commontop_leftimgsrc);
		 rightbg=tArray.getDrawable(R.styleable.commontop_rightimgsrc);
 		 tArray.recycle();//释放
  		 initview(context);
  	}
	private void initview(Context context){
 		LayoutInflater inflater = LayoutInflater.from(context);
		View  view=inflater.inflate(R.layout.common_top, null);
        addView(view);
        title=(TextView) view.findViewById(R.id.commontop_title);
        subtitle=(TextView) view.findViewById(R.id.commontop_subtitle);
        leftimg=(ImageButton) view.findViewById(R.id.commontop_left);
        rightimg=(ImageButton) view.findViewById(R.id.commontop_right);
        leftlay=(LinearLayout) view.findViewById(R.id.commontop_leftlay);
        rightlay=(LinearLayout) view.findViewById(R.id.commontop_rightlay);
        if(titlestr!=null)
        	title.setText(titlestr);
        if(leftbg!=null){
        	leftlay.setVisibility(View.VISIBLE);
        	leftimg.setImageDrawable(leftbg);
        }
         if(rightbg!=null){
        	 rightlay.setVisibility(View.VISIBLE);
        	 rightimg.setImageDrawable(rightbg);
         }
         if(this.subtitlestr!=null){
        	setSubTitle(subtitlestr);
         }
        mainLay=view.findViewById(R.id.commontop_mainlay);
   	}
	//遍历子view，测量宽高，或者在onLayout显示调用view的measure方法，否则不显示控件
  	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
  		int widthSize = MeasureSpec.getSize(widthMeasureSpec);  
  	    int heightSize = MeasureSpec.getSize(heightMeasureSpec);  
  		//LogUtil.logInfo(getClass(), "heightSize:"+heightSize);
   	    measureChildren(widthMeasureSpec, heightMeasureSpec);     
    	setMeasuredDimension(widthSize,mainLay.getMeasuredHeight());//这里得到的是以像素为单位的数值
 	 }
 	//在我们继承ViewGroup时会在除了构造函数之外提供这个方法，我们可以看到，
 	//在ViewGroup的源代码中方法是这样定义的，也就是父类没有提供方法的内容，需要我们自己实现。
  	//当View要为所有子对象分配大小和位置时，调用此方法
 	//在这个类的实现中，需要调用每一个控件的布局方法为其布局。
 	@Override
	protected void onLayout(boolean changed, int l, int t, int r, int b) {
  		//if (changed) {
  			int childCount = getChildCount();//一个view是通过xml实例化来的，另一个是自己添加的BatchView，这里的个数是2
 	 	    for(int i = 0; i < childCount; i ++){
 	 	         View view = getChildAt(i);
   	             //view.measure(r - l, b - t);  
 	 	        int measureHeight = view.getMeasuredHeight();  
 	 	        int measuredWidth = view.getMeasuredWidth(); 
 	            view.layout(0,0, measuredWidth, measureHeight); 
  	            
  	 	    }
  		//}
  	}
 	public void setLeftClickListener(OnClickListener listener){
 		if(leftimg!=null)
 		  leftimg.setOnClickListener( listener);
 	}
 	public void setRightClickListener(OnClickListener listener){
 		if(rightimg!=null)
 			rightimg.setOnClickListener(listener);
 	}
 	public void setTitleClickListener(OnClickListener listener){
 		if(title!=null)
 			title.setOnClickListener(listener);
 	}
 	public void setSubTitleClickListener(OnClickListener listener){
 		if(subtitle!=null)
 			subtitle.setOnClickListener(listener);
 	}
 	public void setTitle(String titlestr,int fontsize){
  		if(title!=null){
  			title.setTextSize(fontsize);
  			title.setText(titlestr);
  		}
  	}
 	public void setTitle(String titlestr){
  		if(title!=null){
   			title.setText(titlestr);
  		}
  	}
 	public void setSubTitle(String titlestr){
  		if(subtitle!=null){
  			subtitle.setText(titlestr);
  			subtitle.setVisibility(View.VISIBLE);
  			if(titlestr!=null&&!"".equals(titlestr)&&title!=null){
  				LinearLayout.LayoutParams params=(LinearLayout.LayoutParams) title.getLayoutParams();
  				params.topMargin=0;
  				title.setLayoutParams(params);
  			}
  		}
  	}
 	public void hiddenSubTitle(){
  		if(subtitle!=null){
  			subtitle.setVisibility(View.GONE); 
  		}
  	}
}
